* {
  box-sizing: border-box;
}
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

/*Header and Footer CSS */
.App-header,
.App-footer {
  background-color: #282c34;
  min-height: 50px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

#pid {
  color: red;
}

#p1id {
  background-color: #0000;
  color: #fff;
  height: 30 px;
  width: 150px;
  border: 3px solid green;
  border-radius: 10px;
}

#p2id {
  background-color: black;
  color: rgb(58, 99, 133);
  height: 50 px;
  width: 180px;
  border-bottom: 2px solid #61dafb;
  border-left: 2px solid #8748;
  border-right: 2px solid green;
  border-top: 2px solid hotpink;
  border-bottom-left-radius: 13px;
  border-bottom-right-radius: 5px;
  border-top-left-radius: 20px;
  border-top-right-radius: 8px;
}

#p3id {
  height: 500px;
  width: 455px;
  background-image: url("./logo.svg");
  border: 2px solid red;
  background-repeat: no-repeat;
  background-position: center center;
  /* background-position: center/top/bottom center/left/right; */
  /* background-position: 192px 34px; */
}

.container {
  background-color: rgb(74, 73, 77);
  color: white;
  border: 4px solid rgb(206, 219, 230);
  padding: 19px;
  width: auto;
  height: 500px;
  /* padding-left: 2px;
  padding-right: 2px;
  padding-top: 2px;
  padding-bottom: 2px;
  padding: 12px 26px 4px 10px; */
  margin: 10px auto;
  border-radius: 12px;
  box-sizing: border-box; /*To fix the width of box even the changing size of padding/margin */
}

.item {
  border: 4px solid black;
  margin: 12px 3px;
  padding: 12px 3px;
  background-color: lightgray;
  border-radius: 4px;
}

.para {
  padding: 10px;
  margin: 10px;
}

#fruit {
  float: left;
  width: 48%;
}

#vegetable {
  float: left;
  width: 48%;
}

#herb {
  /* float: left; */
  clear: left;
  width: 80%;
}

#cont1 {
  border: 2px solid red;
  background-color: lightgrey;
  padding: 34px;
  margin: 34px auto;
  width: 666px;
}

a {
  text-decoration: none;
  color: black;
  margin: 6px;
  padding: 6px;
}

a:hover {
  color: rgb(5, 0, 0);
  background-color: rgb(221, 166, 38);
}

a:visited {
  color: yellow;
}

a:active {
  background-color: darkblue;
}

button:hover {
  color: rgb(5, 0, 0);
  background-color: rgb(221, 166, 38);
}

button:visited {
  color: yellow;
}

button:active {
  background-color: darkblue;
}

.btn {
  background-color: crimson;
  padding: 6px;
  border: none;
  cursor: pointer;
  font-size: 13px;
  border-radius: 4px;
  margin: 6px;
}

img {
  margin: auto;
  display: block;
  width: 34px;
}

h3 {
  text-align: center;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  margin: 0px;
}

.header {
  border: 2px solid red;
  margin: auto;
  width: 1200px;
}

.box {
  border: 4px solid black;
  background-color: grey;
  margin: 4px 0px;
  padding: 23px;
  width: 33%;
  box-sizing: border-box;
  display: inline-block; /*element inline as well as customize its width*/
}

/* Navigation */
.navbar {
  background-color: black;
  border-radius: 30px;
  display: block;
  height: fit-content;
  margin: 4px;
}

.navbar li {
  float: left;
  list-style: none;
  margin: 5px 20px;
}

.navbar ul {
  height: 50px;
}

.navbar li a {
  padding: 3px 3px;
  text-decoration: none;
  color: white;
}

.search {
  float: right;
  color: white;
  padding: 12px;
  margin: 5px 20px;
}

.navbar input {
  border: 2px solid black;
  border-radius: 14px;
  padding: 3px 17px;
  width: auto;
}

.position-container {
  background-color: yellow;
  border: 2px solid red;
  height: 300px;
}

.positionBox {
  height: 190px;
  width: 190px;
  margin: 4px;
  border: 2px solid blue;
  display: inline-block;
}

#box3 {
  /* relative: Positions the element relative to its normal positon and will leave a gap at its normal position*/
  /* position: relative; */
  /* absolute: Positions the element relative to the positon of its first parent*/
  /* position: absolute; */
  position: absolute;
  /* fixed: Positions the element relative to the browser window; */
  /* position: fixed; */
  /* sticky: Positions the element relative to the users scroll position */
  /* top: 34px; */
  left: 34px;
}

.indexBox {
  width: 170px;
  height: 170px;
  border: 2px solid black;
}
#box-1 {
  position: relative;
  top: 49px;
  z-index: 35;
  background-color: green;
}
#box-2 {
  position: relative;
  top: 14px;
  /* z-index  will work only for position: relative, absolute, fixed or sticky; */
  z-index: -165;
  /* will hide the element and the space */
  /* display: none; */
  /* will hide the element but will show its empty space */
  /* visibility: hidden; */
  background-color: red;
}
#box-3 {
  background-color: blue;
}
#box-4 {
  background-color: yellow;
}

.flexContainer {
  height: 544px;
  width: 100%;
  border: 2px solid black;
  display: flex; /* Initialize the container as a flex box */

  /* Flex properties for a flex container */

  /* flex-direction: row; (Default value of flex-direction is row) */
  /* flex-direction: column; */
  /* flex-direction: row-reverse; */
  /* flex-direction: column-reverse; */

  flex-wrap: wrap; /*(Default value of flex-direction is no-wrap) */
  /* flex-wrap: wrap-reverse; */

  /* This is a shorthand for flex-direction: and flex-wrap: ;; */
  /* flex-flow: row-reverse wrap; */

  /* justify-content will justify the content in horizontal direction */
  /* justify-content: center; */
  /* justify-content: space-between; */
  /* justify-content: space-evenly; */
  /* justify-content: space-around; */

  /* justify-content will justify the content in vertical direction */
  /* align-items: center; */
  /* align-items: flex-end; */
  /* align-items: flex-start; */
  align-items: stretch;
}
.item {
  width: 200px;
  height: 200px;
  background-color: tomato;
  border: 2px solid green;
  margin: 10px;
  padding: 3px;
}

#item-1 {
  /* Flex properties for a flex item */
  /* Higher the order, later it shows up in the container */
  /* order: 2; */

  /* flex-grow: 2;
  flex-shrink: 2; */
  background-color: var(--primary-color);
  border: 2px solid var(--danger-color);
  max-width: var(--maxw);
}
#item-2 {
  /* flex-grow: 3;
  flex-shrink: 3; */
  /* flex-basis: 160px; */
  /* when flex-direction is set to row flex-basis: will control width */
  /* when flex-direction is set to column flex-basis: will control height */
}
#item-3 {
  /* flex: 2 2 230px; */
  /* align-self: flex-start;
  align-self: flex-end; */
  align-self: center;
}

html {
  font-size: 10px;
}

.unitsContainer {
  padding: 10px 30px;
  margin: 4px;
  border: 4px solid red;
  width: 100%;
}

.unitsHeading {
  text-align: center;
}

#unitsH2 {
  font-size: 2em;
  padding: 2em;
}

#unitsH3 {
  padding: 3rem;
}

/* @media screen and (max-width: 800px) {
  #contents {
    width: 90%;
  }
} */

.mediaBox {
  background-color: red;
  color: white;
  width: 100%;
  text-align: center;
  display: none;
}

@media only screen and (min-width: 400px) {
  #boxm1 {
    display: block;
  }
}

@media (min-width: 450px) and (max-width: 600px) {
  #boxm2 {
    display: block;
    background-color: teal;
  }
}

@media (min-width: 500px) and (max-width: 700px) {
  #boxm3 {
    display: block;
    color: black;
    background-color: yellow;
  }
}

@media (max-width: 800px) {
  #boxm4 {
    display: block;
    background-color: green;
  }
}

h1 {
  background-color: red;
  color: black;
  font-weight: bold;
  text-align: center;
}

/* if p is contained by any li which is contained by div */
/* div li p{
  color: yellow;
  background-color: green;
  font-weight: bold;
} */

/* if p is right inside div then this CSS will be applied */
/* div > p {
  color: yellow;
  background-color: green;
  font-weight: bold;
} */

/* if p is right after div i.e p is the next sibling of div*/
div + p {
  color: white;
  background-color: rgb(238, 137, 137);
}

.nthContainer {
  display: block;
  width: 300px;
  margin: auto;
}

input {
  display: block;
}

input[type="email"] {
  color: yellow;
  border: 4px solid black;
}

input[type="text"] {
  background-color: cyan;
  border: 2px solid red;
}

li:nth-child(2n + 0) {
  background-color: blue;
}

li:nth-child(odd) {
  background-color: yellow;
}

li:nth-child(3n + 3) {
  background-color: purple;
}

li:nth-child(3) {
  background-color: cyan;
}

body {
  margin: 0;
  padding: 0;
  background-color: black;
  color: white;
}

header::before {
  background: url("https://source.unsplash.com/collection/190727/1600x900")
    no-repeat center center/cover;
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  opacity: 0.3;
}

.navigation {
  font-family: "Bree Serif", serif;
  font-size: 20px;
  display: flex;
}

li {
  list-style: none;
  padding: 20px 23px;
}

section {
  height: 344px;
  font-family: "Bree Serif", serif;
  margin: 3px 230px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

h1 {
  font-size: 4rem;
  background-color: transparent;
  color: white;
}

p {
  text-align: center;
}

/* section::after {
  content: "this is a content";
} */

.cardcontainer {
  display: flex;
}
.card {
  padding: 23px 12px;
  margin: 23px 12px;
  border: 2px solid red;
  background-color: burlywood;
  /* box-shadow: offset-x offset-y color; */
  /* box-shadow: offset-x offset-y blur-radius color; */
  /* box-shadow: offset-x offset-y blur-radius spread-radius color; */

  /* box-shadow: 10px 13px green; */
  /* box-shadow: -10px -13px green; */
  box-shadow: 7px 5px 10px green;
  /* box-shadow: -7px -5px 10px green; */
  /* box-shadow: -7px -5px 10px 10px green; */
  /* box-shadow: -7px -5px 10px 34px rgba(71, 172, 172, 0.5); */
  /* box-shadow: inset 3px 5px green; */

  /* box-shadow: 3px 5px green, 4px 6px red; */
}
.card h2 {
  /* text-shadow: 3px 4px red; */
  text-shadow: 3px 2px 15px rgb(71, 231, 159);
  /* text-shadow: -3px -2px 2px white; */
}

.varContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: var(--maxw);
}

.varBox {
  --box-color: #61dafb;
  width: 200px;
  height: 200px;
  background-color: var(--box-color);
  box-shadow: 2px 3px var(--box-color);
  border: 2px solid var(--danger-color);
  margin: 2px 9px;
}

.aniContainer {
  display: flex;
  background-color: blueviolet;
  margin: 10px 5px;
}

.aniBox {
  background-color: aquamarine;
  width: 250px;
  height: 250px;
  /* animation-name: ani1; */
  animation-name: harry2;
  animation-duration: 2s;
  /* animation-iteration-count: 3;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
  animation-delay: 1s;
  animation-direction: reverse; */

  /* These properties can be set using this shorthand */
  /* animation: animation-name animation-duration animation-timing-function animation-delay animation-iteration-count animation-fill-mode; */
  /* animation: harry 5s ease-in 1s 12 backwards; */
}

@keyframes harry2 {
  0% {
    top: 0px;
    left: 0px;
  }
  25% {
    top: 250px;
    left: 0px;
  }
  75% {
    top: 250px;
    left: 250px;
  }
  100% {
    top: 0px;
    left: 250px;
  }
}

@keyframes ani1 {
  from {
    width: 200px;
  }
  to {
    width: 400px;
  }
}

.tranContainer {
  height: 200px;
  width: 200px;
  display: flex;
}

#tranBox {
  display: flex;
  height: 200px;
  width: 200px;
  background-color: red;
  justify-content: center;
  align-items: center;
  /* transition-property: background-color;
  transition-duration: 1s;
  transition-timing-function: ease-in-out;
  transition-delay: 2s; */

  /* Transition short hand property in one line */
  /* transition: background-color 1s ease-in-out 2s; */

  transition: all 1s ease-in-out 0.3s;
}

#tranBox:hover {
  background-color: green;
  height: 400px;
  width: 400px;
  border-radius: 100px;
  font-size: 45px;
}

* {
  margin: 0px;
  padding: 0px;
}

.transContainer {
  height: 80vh;
  background-color: burlywood;
  display: flex;
  justify-content: center;
  align-items: center;
}
.transBox {
  display: flex;
  align-items: center;
  justify-content: center;
  background: brown;
  border: 2px solid black;
  border-radius: 8px;
  height: 400px;
  width: 400px;
  transition: all 0.5s ease-in-out;
}
.transBox:hover {
  /* transform: rotate(360deg); */
  /* transform: skew(40deg); */
  /* transform: scale(2); */
  /* transform: translateX(123px); */
  /* transform: translateY(123px); */
  transform: translate(123px, 123px);
}

.gridContainer {
  display: grid;
  /* grid-template-columns: 300px 100px 100px; */
  /* grid-template-columns: 300px auto 100px; */
  grid-template-columns: 1fr 4fr 1fr;
  /* grid-template-columns: repeat(3, auto); */
  grid-gap: 2rem;
}
.gridItem {
  height: 100px;
  width: 100px;
  background-color: red;
  border: 2px solid black;
  padding: 15px 5px;
}

.grid {
  display: grid;
  /* grid-template-rows: repeat(5, 1fr); */
  /* grid-auto-rows: 1fr; */
  grid-template-columns: repeat(auto-fit, minmax(112px, 1fr));
  grid-gap: 1rem;
  justify-content: center;
}

.gridBox {
  background-color: red;
  border: 2px solid black;
  padding: 23px;
}

.gridBox:first-child {
  /* grid-column-start: 1;
  grid-column-end: 3;
  grid-row-start: 1;
  grid-row-end: 3; */
  grid-column: 1 / span 3;
  grid-row: 1 / span 3;
}

#navbar {
  grid-area: navbar;
}
#section {
  grid-area: section;
}
#aside {
  grid-area: aside;
}

.classContainer {
  display: grid;
  grid-gap: 1rem;
  grid-template-areas:
    "navbar navbar navbar navbar"
    "section section section aside"
    "footer footer footer footer";
}

.classItem {
  background-color: yellow;
  border: 3px solid black;
  padding: 12px 23px;
}

footer {
  grid-area: footer;
}

.mediaGridContainer {
  display: grid;
  grid-template-areas:
    "navbar navbar navbar navbar"
    "section section section aside"
    "footer footer footer footer";
}

@media only screen and (max-width: 300px) {
  body {
    background-color: red;
  }
  .mediaGridContainer {
    grid-template-areas:
      "navbar navbar navbar navbar"
      "section section section section"
      "aside aside aside aside"
      "footer footer footer footer ";
  }
  aside {
    display: none;
  }
  span {
    display: block;
    text-align: center;
  }
}

@media only screen and (min-width: 300px) and (max-width: 500px) {
  .mediaGridContainer {
    grid-template-areas:
      "navbar navbar navbar navbar"
      "section section section section"
      "aside aside aside aside"
      "footer footer footer footer ";
  }
  aside {
    display: none;
  }
  span {
    display: block;
    text-align: center;
  }
}

@media (min-width: 500px) and (max-width: 800px) {
  .mediaGridContainer {
    grid-template-areas:
      "navbar navbar navbar navbar"
      "section section section section"
      "aside aside aside aside"
      "footer footer footer footer ";
  }
  span {
    display: block;
    text-align: center;
  }
}

.bdr {
  border: 2px solid black;
  padding: 10px 20px;
  background-color: wheat;
}

nav {
  grid-area: navbar;
}

section {
  grid-area: section;
}

aside {
  grid-area: aside;
}

#footer {
  grid-area: footer;
  text-align: center;
}

:root {
  --primary-color: blue;
  --danger-color: red;
  --maxw: 333px;
}
